16-bit ASM1
.MODEL small
.STACK 100h
.data
    message db "Hello, world!$"
.code
main PROC
    mov ax,@data
    mov ds,ax

    mov ah,9
    lea dx,message
    int 21h

    mov ah,4ch
    int 21h
main ENDP
END main

16-bit ASM2
.MODEL small
.STACK 100h
.DATA
    tb1 db "Hay nhap vao mot chuoi ky tu:  $"
    tb2 db 13, 10,"Chuoi vua nhap la:  $"
    sr db 200 dup("$")
.CODE
main PROC
    MOV AX, @DATA
    MOV DS,AX
    
    lea dx,tb1
    mov ah,09h
    int 21h
  
    mov ah,0Ah
    lea dx,sr
    int 21h
  
    lea DX,tb2
    mov ah,09h
    int 21h
  
    lea dx,sr
    add dx,2
    int 21h

    mov ah,4ch
    int 21h
main ENDP
END main

16-bit ASM3
.MODEL small
.STACK 100h
.DATA
    tb1 DB 'Nhap vao 1 chuoi: $'
    tb3 DB 10,13,'Doi thanh chu hoa: $'
    s   DB 101 dup('$')
.CODE
main PROC
    MOV AX, @DATA
    MOV DS,AX
    ;xuat chuoi tb1
    MOV AH,09h       
    LEA DX,tb1
    INT 21h
    ;nhap chuoi s
    MOV AH,0AH       
    LEA DX,s
    INT 21h              
; xuat chuoi tb3
    MOV AH,09h       
    LEA DX,tb3
    INT 21h          
; Goi chuong trinh con in chuoi hoa
    CALL InChuoiHoa                      
   
    MOV AH,4ch
    INT 21h
; Doi thanh chuoi ky tu hoa
    InChuoiHoa PROC
        LEA SI,s+1       
        XOR CX,CX
        MOV CL,[SI] ;so ky tu cua xau nhap vao, luu vao CX
        INC SI
        LapHoa:
            MOV AH,02h
            MOV DL,[SI]
            CMP DL,'a'
            JB    LH1
            CMP DL,'z'
            JA    LH1
            SUB DL,32
            LH1: INC SI
                INT 21h
            LOOP LapHoa
        RET
    InChuoiHoa ENDP

main ENDP
END main

16-bit ASM4
.model small
.stack 100h
.data 
    num1    dw  0
    num2    dw  0
.code
    main proc      
        mov ax, @data
        mov ds, ax                          
        call inputDec                       
        mov num1, ax
        call inputDec
        mov num2, ax                       
        add ax, num1

        call outputDec  
         
        mov ah, 4ch
        int 21h
         
    main endp
     
    inputDec proc
        ; Vao: nhap vao so
        ; Ra: So luu trong Ax
        push bx
        push cx
        push dx 
         
        batDau:
            mov ah, 2
            xor bx, bx
            xor cx, cx
            mov ah, 1
            int 21h
            cmp al, '-'
            je dauTru
            cmp al, '+'
            je dauCong
            jmp tiepTuc
             
            dauTru:
                mov cx, 1
             
            dauCong:
                int 21h
             
            tiepTuc:
                cmp al, '0'
                jnge khongPhaiSo    ; khong lop hon hoac bang
                cmp al, '9'
                jnle khongPhaiSo    ; Khong nho hon hoac bang 
                and ax, 000fh       ; doi thanh chu so
                push ax             ; cat vao ngan xep
                mov ax, 10
                 
                mul bx              ; ax = tong*10
                mov bx, ax          
                pop ax
                add bx, ax          ; tong = tong*10 + so
                mov ah, 1
                int 21h
                cmp al, 13          ; da enter chua?
                jne tiepTuc         ; nhap tiep
                 
                mov ax, bx          ; chuyen KQ ra ax
                or cx, cx           ; co phai so am khong
                je ra
                neg ax              ; neu la so am thi doi ax ra so am
                 
            ra:
                pop dx
                pop cx
                pop bx  

                ret
                 
            khongPhaiSo:
                mov ah, 2
                mov dl, 0dh
                int 21h
                mov dl, 0ah
                int 21
                jmp batDau
                 
                 
    inputDec endp 
     
    outputDec proc
        push bx
        push cx
        push dx
         
        cmp ax, 0   ;   neu ax > 0 tuc la khong phai so am ta doi ra day
        jge doiRaDay
        push ax
        mov dl, '-'
        mov ah, 2
        int 21h
        pop ax
        neg ax  ; ax = -ax
         
        doiRaDay:
            xor cx, cx  ; gan cx = 0
            mov bx, 10  ; so chia la 10
            chia:
                xor dx, dx  ; gan dx = 0
                div bx      ; ax = ax / bx; dx = ax % bx
                push dx
                inc cx
                cmp ax, 0   ; kiem tra xem thuong bang khong chua?
                jne chia    ; neu khong bang thi lai chia
                mov ah, 2
            hien:
                pop dx
                or dl, 30h
                int 21h
                loop hien
                 
                pop dx
                pop cx
                pop bx
                ;pop ax
        ret
         
    outputDec endp
     
end main



16-bit ASM6
.MODEL small
.STACK 100h
.code
main PROC
    mov cx,0
    mov ah,1
while_:
    int 21h
    cmp al,0dh
    je  end_while
    inc cx
    push ax
    jmp while_

end_while:
    mov ah,2
    cmp cx,0
    je  exit

print_stack:
    pop dx
    int 21h
    loop    print_stack

exit:
    mov ah,4ch
    int 21h
main ENDP
END main

16-bit ASM9
.model small
.stack 100h
.data
    tb3 db  10,13,"max: $"
    tb33    db  10,13,"min: $"
    tb4 db  10,13,"Mang: $"
    a   dw  100  dup(0)
    count   dw  0

.code
;description
main PROC
    mov ax,@data
    mov ds,ax
    
    mov cx,100
    xor si,si 

    call    nhap_mang
    ; call    in_mang
    call    find_max
    call    find_min

    mov ah,4ch
    int 21h
main ENDP

;description
nhap_mang PROC
    nhap:
        push cx

        nhapso:
            mov ah,1
            int 21h
            cmp al," "
            je  catkq
            cmp al,13
            je  stop
            sub al,30h
            mov cl,al
            xor ch,ch
            mov bx,10
            mov ax,a[si]
            mul bx
            add ax,cx
            mov a[si],ax
            jmp nhapso
        catkq:
            add si,2
            pop cx
            inc count
        loop    nhap
        stop:
            add si,2
            pop cx
            inc count
            ret
            
nhap_mang ENDP

;description
in_mang PROC
    lea dx,tb4
    mov ah,9
    int 21h

    mov cx, count
    mov si,0
    view:
        push    cx
        mov ax,a[si]
        xor cx,cx
        tach:
            xor dx,dx
            div bx
            push dx
            inc cx
            cmp ax,0
            jne tach
            mov ah,2
            hien1chuso:
                pop dx
                add dl,30h
                int 21h
                loop    hien1chuso
            mov dl,","
            int 21h
            add si,2
            pop cx
            loop    view
in_mang ENDP

;description
find_max PROC
    lea dx,tb3
    mov ah,9
    int 21h

    xor si,si
    mov ax,a[si]
    mov cx,count
    duyet:
        cmp a[si],ax
        jbe qua
        mov ax,a[si]
    qua:
        add si,2
        loop    duyet

        xor cx,cx
        mov bx,10

    chia:
        xor dx,dx
        div bx
        push    dx
        inc cx
        cmp ax,0
        jne chia
        mov ah,2
    hienso:
        pop dx
        add dl,30h
        int 21h
        loop hienso    
find_max ENDP

;description
find_min PROC
    lea DX,tb33
    mov ah,9
    int 21h
    xor si, si
    mov ax,a[si]
    mov cx,count
    duyet1:
        cmp ax,a[si]
        jbe qua1
        mov ax,a[si]
    qua1:
        add si,2
        loop    duyet1

        xor cx,cx
        mov bx,10
    chia1:
        xor dx,dx
        div bx
        push    dx
        inc cx
        cmp ax,0
        jne chia1
        mov ah,2
    hienso1:
        pop dx
        add dl,30h
        int 21h
        loop    hienso1
find_min ENDP
end main

16-bit ASM10
.model small
.stack 100h
.data
    tb3 db  "Tong chan: $"
    tb4    db  10,13,"Tong le: $"
    a   dw  100  dup(0)
    count   dw  0
    tongChan    dw  0
    tongLe  dw  0
.code
;description
main PROC
    mov ax,@data
    mov ds,ax
    
    mov cx,100
    xor si,si 

    call    nhap_mang
    call    tinh_tong

    mov ah,4ch
    int 21h
main ENDP

;description
nhap_mang PROC
    nhap:
        push cx

        nhapso:
            mov ah,1
            int 21h
            cmp al," "
            je  catkq
            cmp al,13
            je  stop
            sub al,30h
            mov cl,al
            xor ch,ch
            mov bx,10
            mov ax,a[si]
            mul bx
            add ax,cx
            mov a[si],ax
            jmp nhapso
        catkq:
            add si,2
            pop cx
            inc count
        loop    nhap
        stop:
            add si,2
            pop cx
            inc count
            ret
            
nhap_mang ENDP

;description
tinh_tong PROC
    xor si,si
    mov cx,count
    duyet:
        mov ax,a[si]
        test ax,1
        jz soChan
        jnz soLe
        soChan:
            add tongChan,ax
            jmp qua
        soLe:
            add tongLe, ax
        qua:
            add si,2
        loop    duyet

        xor cx,cx
        mov bx,10
    
    lea dx,tb3
    mov ah,9
    int 21h

    mov ax, tongChan
    chia:
        xor dx,dx
        div bx
        push    dx
        inc cx
        cmp ax,0
        jne chia

    mov ah,2
    hienso:
        pop dx
        add dl,30h
        int 21h
        loop hienso
    
    lea dx,tb4
    mov ah,9
    int 21h

    mov ax, tongLe
    chia2:
        xor dx,dx
        div bx
        push    dx
        inc cx
        cmp ax,0
        jne chia2

    mov ah,2
    hienso2:
        pop dx
        add dl,30h
        int 21h
        loop hienso2    
tinh_tong ENDP
end main
